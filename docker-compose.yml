services:
  postgres:
    container_name: postgres
    image: postgres:14
    hostname: postgres
    env_file:
      - ./.env
    ports:
      - "${POSTGRES_OUT_PORT}:5432"
    networks:
      - tron_network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}" ]
      start_period: 2s
      interval: 3s
      timeout: 2s
      retries: 15
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    logging:
      driver: none
    env_file:
      - ./.env
    networks:
      - tron_network
    ports:
      - "${PGADMIN_OUT_PORT}:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./servers.json:/pgadmin4/servers.json
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  python:
    image: tron-python
    container_name: python
    build:
      dockerfile: ./Dockerfile
    hostname: python
    env_file:
      - ./.env
    ports:
      - "${FASTAPI_OUT_PORT}:8000"
    networks:
      - tron_network
    volumes:
      - ./app/:/app/
    command: bash -c "alembic upgrade head && uvicorn main:app --host 0.0.0.0 --port 8000 --reload"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl -f localhost:8000/docs || exit" ]
      start_period: 20s
      interval: 10s
      timeout: 2s
      retries: 10
    restart: unless-stopped


volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
    tron_network:
        name: tron_network
        driver: bridge